/**
  * multiple-select - Multiple select is a jQuery plugin to select multiple elements with checkboxes :).
  *
  * @version v2.0.9
  * @homepage http://multiple-select.wenzhixin.net.cn
  * @author wenzhixin <wenzhixin2010@gmail.com> (http://wenzhixin.net.cn/)
  * @license MIT
  */

const e=window.jQuery;function t(e,t,i,r,s,l,a,n,u,h){const c="function"==typeof i?i.options:i;return e&&e.render&&(c.render=e.render,c.staticRenderFns=e.staticRenderFns,c._compiled=!0),i}const i={name:"MultipleSelect",props:{modelValue:{type:[String,Number,Array,Object],default:void 0},value:{type:[String,Number,Array,Object],default:void 0},name:{type:String,default:void 0},multiple:{type:[Boolean,String],default:!1},disabled:{type:Boolean,default:!1},width:{type:[Number,String],default:void 0},size:{type:String,default:void 0},data:{type:[Array,Object],default(){}},options:{type:Object,default:()=>({})}},emits:["update:modelValue","change",...(()=>{const t=[];for(const i in e.fn.multipleSelect.defaults)/^on[A-Z]/.test(i)&&t.push(i.replace(/([A-Z])/g,"-$1").toLowerCase());return t})()],data(){return{currentValue:void 0===this.value?this.modelValue:this.value,children:[]}},watch:{modelValue(e){this.currentValue!==e&&(this.currentValue=e,this._initDefaultValue())},value(e){this.currentValue!==e&&(this.currentValue=e,this._initDefaultValue())},multiple(){this._initSelect()},disabled(){this.$nextTick((()=>{this.disabled?this.disable():this.enable()}))},width(){this._initSelectValue()},options:{handler(){this._initSelectValue()},deep:!0},data:{handler(){this._initSelectValue()},deep:!0}},updated(){const e=this.$el.querySelectorAll("option,optgroup");if(e.length!==this.children.length||!Array.prototype.every.call(e,((e,t)=>e===this.children[t]))){this._update(),this.observer.disconnect();for(const t of e)this.observer.observe(t,{attributes:!0,childList:!0,subtree:!0});this.children=e}},unmounted(){this.destroy(!0),this.observer.disconnect()},mounted(){this._refresh(),this.$select=e(this.$el).change((()=>{const e=this.getSelects();Array.isArray(this.currentValue)?this.currentValue=e:"number"==typeof this.currentValue?this.currentValue=e.length?+e[0]:void 0:this.currentValue=e.length?e[0]:void 0,this.$emit("update:modelValue",this.currentValue),this.$emit("change",this.currentValue)})),this.observer=new MutationObserver((()=>{this._update()})),this._hasInit&&this.$select.val()&&(void 0===this.currentValue||Array.isArray(this.currentValue)&&!this.currentValue.length)&&(this.currentValue=this.$select.val(),this.$emit("update:modelValue",this.currentValue),this.$emit("change",this.currentValue));for(const t in e.fn.multipleSelect.defaults)/^on[A-Z]/.test(t)&&(e.fn.multipleSelect.defaults[t]=(...e)=>{this.$emit(t.replace(/([A-Z])/g,"-$1").toLowerCase(),...e)});this._initSelectValue()},methods:{_update(){this.$nextTick((()=>{this._refresh(),this._initSelectValue()}))},_initSelectValue(){this._initSelect(),void 0===this.currentValue||Array.isArray(this.currentValue)&&!this.currentValue.length||this._initDefaultValue()},_initSelect(){if(!this.$select)return;const t={...(i=this.options,i?e.extend(!0,Array.isArray(i)?[]:{},i):i),single:!this.multiple,width:this.width,size:this.size,data:this.data};var i;this._hasInit?this.refreshOptions(t):(this.$select.multipleSelect(t),this._hasInit=!0)},_initDefaultValue(){this.$nextTick((()=>{try{this.setSelects(Array.isArray(this.currentValue)?this.currentValue:[this.currentValue],null,!0)}catch(e){}}))},...(()=>{const t={};for(const i of e.fn.multipleSelect.methods)t[i]=function(...e){return this.$select.multipleSelect(i,...e)};return t})(),_refresh(){this.$el.querySelectorAll("option").forEach((t=>{t.value&&e(t).data("value",t.value)}))},refresh(){this._refresh(),this.$select.multipleSelect("refresh")}}};var r=function(){var e=this,t=e.$createElement;return(e._self._c||t)("select",{attrs:{name:e.name,multiple:e.multiple,disabled:e.disabled}},[e._t("default")],2)};r._withStripped=!0;const s=t({render:r,staticRenderFns:[]},0,i);export{s as default};
